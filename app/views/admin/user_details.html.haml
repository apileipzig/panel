:javascript
  function select_all(ids, select) {
    while(ids.length > 0) {
      $( "#permission_" + ids.shift() + "_" + select ).attr('checked', true);
    }
  }

%header
  %h1 Nutzerdaten bearbeiten
- if @user.blank?
  %p
    Dieser Nutzer existiert nicht.
- else
  %p
    = "Rechtevergabe f&uuml;r #{@user.name}"
  - form_tag set_permissions_path, :name => 'set_permissions' do
    %fieldset
      %legend Rechtevergabe
      .fieldset-desc
        %p
          Bitte wählen Sie die Rechte für diesen Nutzer aus.
      = hidden_field(:user, :id)
      %div#accordion
        - @permissions.each do |tablename, table_permissions|
          - %w[create read update delete].each do |access|
            %h3
              %a{:href => '#'}
                = "Schreibrechte für Tabelle \"#{tablename.titleize}\"" if access == 'create'
                = "Leserechte für Tabelle \"#{tablename.titleize}\"" if access == 'read'
                = "Aktualisierungsrechte für Tabelle \"#{tablename.titleize}\"" if access == 'update'
                = "Löschrechte für Tabelle \"#{tablename.titleize}\"" if access == 'delete'
            %div
              %span
                - js_call = "select_all(new Array('" + table_permissions[access].map{|p| p.id}.join("','") + "'), 1);"
                %a{:href => 'javascript:void(0)', :onclick => js_call, :class => 'select_all'}
                  Alle ausw&auml;hlen
              %span
                - js_call = "select_all(new Array('" + table_permissions[access].map{|p| p.id}.join("','") + "'), 0);"
                %a{:href => 'javascript:void(0)', :onclick => js_call, :class => 'select_all'}
                  Alle abw&auml;hlen
              %table
                %tr
                  - %w[Spalte Nein Ja].each do |headline|
                    %th= headline
                - table_permissions[access].each do |permission|
                  %tr
                    %td
                      = permission.column.titleize
                      %td
                        = radio_button('permission', permission.id, 0, :checked => !@user_permissions.include?(permission))
                      %td
                        = radio_button('permission', permission.id, 1, :checked => @user_permissions.include?(permission))
      %button{:name => 'commit', :type => 'submit'} Absenden
    
  - key_confirm_function = "return confirm('Wollen Sie den API-Key des Nutzers wirklich erneuern?')" 
  - form_tag reset_apikey_path, :name => 'reset_apikey', :onsubmit => key_confirm_function do
    %fieldset
      %legend
        = "API-Key für #{@user.name} zurücksetzen"
      .fieldset-desc
        %p
          Mit einem Klick auf Absenden wird der API-Key des Nutzers erneuert. Der Nutzer muss dar&uuml;ber in Kenntnis gesetzt werden,
          da sein alter API-Key dann nicht mehr funktioniert.
      = hidden_field :user, :id
      %button{:name => 'commit', :type => 'submit'} API-Key erneuern

  - deactivate_confirm_function = "return confirm('Wollen Sie den Nutzer wirklich deaktivieren?')" 
  - form_tag user_deactivation_path, :name => 'deactivation', :onsubmit => deactivate_confirm_function do
    %fieldset
      %legend
        = "Account von #{@user.name} deaktivieren"
      .fieldset-desc
        %p
          Mit einem Klick auf Absenden wird der Nutzer deaktiviert. Der Nutzer hat dann keinen Zugang mehr zur Leipzig-API.
          Seine Rechte bleiben bis zur einer erneuten Aktivierung erhalten.
      = hidden_field :user, :id
      %button{:name => 'commit', :type => 'submit'} Deaktivieren
